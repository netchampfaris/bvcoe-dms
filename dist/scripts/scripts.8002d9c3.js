"use strict";angular.module("bvcoeDmsApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","firebase","cgBusy","ngStorage","xeditable","ui.bootstrap","angular-confirm","ngHandsontable","ngToast"]).run(["$rootScope","FirebaseRef","FirebaseAuth","$location","$localStorage","editableOptions","$route",function(a,b,c,d,e,f,g){a.$storage=e,a.$storage.authData=b.getAuth(),a.logout=function(){b.unauth(),console.log("Logged out"),delete e.authData,delete e.userData,d.path("/")},f.theme="bs3"}]).config(["$routeProvider","$httpProvider",function(a,b){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main",resolve:{currentAuth:["FirebaseAuth",function(a){return a.$waitForAuth()}]}}).when("/dashboard",{templateUrl:"views/dashboard.html",controller:"DashboardCtrl",controllerAs:"dashboard",resolve:{currentAuth:["FirebaseAuth",function(a){return a.$requireAuth()}]}}).when("/defaulters",{templateUrl:"views/defaulters.html",controller:"DefaultersCtrl",controllerAs:"defaulters"}).when("/dataentry",{templateUrl:"views/dataentry.html",controller:"DataentryCtrl",controllerAs:"dataentry",resolve:{currentAuth:["FirebaseAuth",function(a){return a.$requireAuth()}]}}).when("/attendances",{templateUrl:"views/attendances.html",controller:"AttendancesCtrl",controllerAs:"attendances",resolve:{currentAuth:["FirebaseAuth",function(a){return a.$requireAuth()}]}}).when("/genDefaulter",{templateUrl:"views/gendefaulter.html",controller:"GendefaulterCtrl",controllerAs:"genDefaulter",resolve:{currentAuth:["FirebaseAuth",function(a){return a.$requireAuth()}]}}).when("/takeAttendance",{templateUrl:"views/takeAttendance.html",controller:"TakeAttendanceCtrl",controllerAs:"takeAttendance",resolve:{currentAuth:["FirebaseAuth",function(a){return a.$requireAuth()}]}}).when("/extras",{templateUrl:"views/extras.html",controller:"ExtrasCtrl",controllerAs:"extras",resolve:{currentAuth:["FirebaseAuth",function(a){return a.$requireAuth()}]}}).when("/lazyAttendances",{templateUrl:"views/lazyattendances.html",controller:"LazyattendancesCtrl",controllerAs:"lazyAttendances",resolve:{currentAuth:["FirebaseAuth",function(a){return a.$requireAuth()}]}}).when("/adminPanel",{templateUrl:"views/adminpanel.html",controller:"AdminpanelCtrl",controllerAs:"adminPanel",resolve:{currentAuth:["FirebaseAuth",function(a){return a.$requireAuth()}]}}).when("/eYellowBook",{templateUrl:"views/eyellowbook.html",controller:"EyellowbookCtrl"}).otherwise({redirectTo:"/attendances"}),b.defaults.useXDomain=!0,delete b.defaults.headers.common["X-Requested-With"]}]),angular.module("bvcoeDmsApp").controller("MainCtrl",["FirebaseRef","$scope","$location","$rootScope","$q","$localStorage",function(a,b,c,d,e,f){function g(){function b(){return a.child("teachers/"+f.authData.uid).update({name:h.name,role:h.teacherrole||null,dept:h.dept,year:h.year||null})}console.log("newUser"),b().then(function(){return console.log("destroy token"),a.child("tokens/"+j).remove()})}b.$storage=f,b.depts=[],b.years=[],b.sems=[];var h={};a.onAuth(function(d){f.authData=d,d&&a.child("teachers/"+d.uid).once("value").then(function(a){return a.val()?!1:!0}).then(function(a){return console.log("isNewUser"),a?g():void 0}).then(function(){console.log("userData"),c.path("/attendances"),b.$apply()})}),b.loginResult={message:"",success:!0},b.login=function(c){function d(){return a.authWithPassword({email:c.email,password:c.pass},{remember:"sessionOnly"})}var f=e.defer();d().then(function(a){b.loginResult={success:!0,message:""},f.resolve()},function(a){console.log(a),b.loginResult={success:!1,message:a.message},f.reject()}),b.promise=f.promise},b.message={regSuccess:null,text:""};var i=a.child("departments");i.once("value",function(c){for(var d in c.val()){var e=c.val();b.depts.push({id:d,name:e[d].name})}a.child("year").once("value",function(a){a=a.val();for(var c in a)b.years.push({id:c,name:a[c].name})}),console.log("departments loaded")},function(a){console.log(a)});var j;b.register=function(c){h=_.cloneDeep(c);var d=e.defer();i=a.child("tokens"),i.once("value",function(a){a=a.val();var e,g,h=!1;for(var i in a)if(e=a[i].token,g=a[i].used,c.token==e&&!g){console.log("token match"),h=!0,j=i,f(c);break}h||(console.log("token invalid"),b.message.text="Token Invalid",b.message.regSuccess=!1,d.reject())},function(a){console.log(a),d.reject()});var f=function(c){a.createUser({email:c.email,password:c.pass},function(a,e){if(a){switch(a.code){case"EMAIL_TAKEN":b.message.text="The new user account cannot be created because the email is already in use.";break;case"INVALID_EMAIL":b.message.text="The specified email is not a valid email.";break;default:b.message.text=a}b.message.regSuccess=!1,d.reject()}else console.log("Successfully created user account with uid:",e.uid),b.message.regSuccess=!0,b.message.text="Registration completed successfully!",b.login(c),d.resolve()})};b.regpromise=d.promise}}]),angular.module("bvcoeDmsApp").controller("DashboardCtrl",["$scope","FirebaseAuth","$location","$rootScope","$http",function(a,b,c,d,e){a.push=function(a){var b="40862591aa0d0abdcaa450c53fd513ab31369a39c56de17d",c="1bb897af",d=a.tokens.split(",");console.log(d);var f=btoa(b+":"),g={method:"POST",url:"https://push.ionic.io/api/v1/push",headers:{"Content-Type":"application/json","X-Ionic-Application-Id":c,Authorization:"basic "+f},data:{tokens:d,notification:{alert:a.body,title:a.title}}};e(g).success(function(a){console.log("Ionic Push: Push success!")}).error(function(a){console.log("Ionic Push: Push error...")})}}]),angular.module("bvcoeDmsApp").factory("FirebaseAuth",["$firebaseAuth","firebaseurl",function(a,b){var c=new Firebase(b);return a(c)}]),angular.module("bvcoeDmsApp").constant("firebaseurl","https://hazri.firebaseio.com"),angular.module("bvcoeDmsApp").directive("compareTo",function(){return{require:"ngModel",scope:{otherModelValue:"=compareTo"},link:function(a,b,c,d){d.$validators.compareTo=function(b){return b==a.otherModelValue},a.$watch("otherModelValue",function(){d.$validate()})}}}),angular.module("bvcoeDmsApp").factory("FirebaseRef",["firebaseurl",function(a){var b=new Firebase(a);return b}]),angular.module("bvcoeDmsApp").controller("DefaultersCtrl",["$scope","FirebaseRef","$q","$uibModal","firebaseurl","$http",function(a,b,c,d,e,f){a.sms={success:!1},a.depts=[],a.years=[{id:1,name:"First Year"},{id:2,name:"Second Year"},{id:3,name:"Third Year"},{id:4,name:"Final Year"}],a.form={};var g=c.defer();b.child("departments").once("value",function(b){for(var c in b.val()){var d=b.val();a.depts.push({id:c,name:d[c].name})}g.resolve()},function(a){console.log(a),g.reject()}),a.deptpromise=g.promise,a.defaulters=[],a.loadDefaulters=function(b){var d,g=b.dept,h=b.sem;switch(console.log(b),b.year){case"1":d="fe";break;case"2":d="se";break;case"3":d="te";break;case"4":d="be"}var i=c.defer();f({method:"GET",url:e+"/defaulters/"+g+"/.json?shallow=true"}).then(function(b){var c=[];for(var e in b.data){var f=e.split("-");g==f[1]&&d==f[2]&&h==f[3].substr(3)&&c.push({key:e,dept:f[1],year:f[2],sem:f[3].substr(3),date:f[4]+"-"+f[5]+"-"+f[6]})}a.defaulters=c,i.resolve(),console.log(a.defaulters)},function(a){console.log(a),i.reject()}),a.promise=i.promise},a.download=function(a){b.child("defaulters/"+a.dept+"/"+a.key+"/excel").once("value",function(a){window.open(a.val(),"_blank")})},a.viewDefaulters=function(c){b.child("defaulters/"+c.dept+"/"+c.key+"/percentData").once("value",function(b){var c=b.val(),e=d.open({animation:!0,templateUrl:"views/modals/mymodal.html",controller:"ModalCtrl",size:"lg",resolve:{defaulters:function(){return c}}});e.result.then(function(b){a.sms.success=b,console.log(b)},function(){console.log("Modal dismissed at: "+new Date)})})}}]),angular.module("bvcoeDmsApp").controller("DataentryCtrl",["$scope","XLSXReaderService","FirebaseRef","$q",function(a,b,c,d){a.subjectColumns=[{data:"subjectCode",title:"Subject Code"},{data:"subjectName",title:"Subject FullName"},{data:"subjectShortName",title:"Subject ShortName"},{data:"isTheory",title:"Theory ?"},{data:"isPractical",title:"Practical ?"},{data:"theoryTeacher",title:"Theory Teacher"}],a.createBatches=function(b){a.batchInfo=[],a.subjectColumns=[{data:"subjectCode",title:"Subject Code",validator:a.uidValidator},{data:"subjectName",title:"Subject FullName"},{data:"subjectShortName",title:"Subject ShortName"},{data:"isTheory",title:"Theory ?",type:"checkbox"},{data:"isPractical",title:"Practical ?",type:"checkbox"},{data:"theoryTeacher",title:"Theory Teacher"}],a.subjects=[],a.subjects.push({subjectCode:null,subjectName:null,subjectShortName:null,isTheory:!1,isPractical:!1,theoryTeacher:null});for(var c=1;b>=c;c++)a.batchInfo.push({id:c,rollno:null}),a.subjectColumns.push({data:"batch"+c+"Teacher",title:"Batch "+c+" Teacher"}),a.subjects[0]["batch"+c+"Teacher"]=null},a.createStudents=function(b){for(a.students=[];b>0;)a.students[b-1]={uid:null,rollno:b,name:null,phone:null,pphone:null,gender:null},b--},a.genderValidator=function(a,b){console.log(a),b("m"==a||"f"==a)},a.phoneValidator=function(a,b){console.log(a);var c=/^\d+$/.test(a);b(10==a.length&&c)},a.uidValidator=function(a,b){var c=this.instance.getDataAtCol(this.col),d=c.indexOf(a),e=!0;return console.log(a),(d>-1&&this.row!==d||~a.indexOf(" "))&&(e=!1),b(e)},a.submit=function(b,e,f,g){_.forEach(g,function(a){if(!a.isPractical)for(var b=0;b<e.length;b++)a["batch"+(b+1)+"Teacher"]=null;a.isTheory||(a.theoryTeacher=null)}),console.log(b,e,f,g);var h=d.defer(),i=b.deptid,j=b.yearid,k=b.semid,l=b.totalStudents,m=i+"-"+j,n=[],o=[];_.forEach(e,function(a){n[a.id]=a.rollno});var p=c.child("studentCount/"+i+"/"+m).update({batchno:n,count:l,dept:i,year:j,advisor:b.advisor});o.push(p),_.forEach(f,function(a){p=c.child("students/"+i+"/"+a.uid).update({name:a.name,phone:a.phone,parents_phone:a.pphone,rollno:a.rollno,year:j,gender:a.gender,uid:a.uid}),o.push(p)}),_.forEach(g,function(a){for(var b=[],d=0;d<e.length;d++)b[d+1]=a["batch"+(d+1)+"Teacher"];p=c.child("subjects/"+i+"/"+a.subjectCode).update({fullname:a.subjectName,name:a.subjectShortName,theory:a.isTheory,practical:a.isPractical,teacher:a.theoryTeacher,pteacher:b,dept_id:i,year:j,sem:k}),o.push(p)}),p=c.child("departments/"+i).update({name:b.deptname,hod:b.hod}),o.push(p),d.all(o).then(function(b){console.log("success",b),a.form.$setPristine(),a.students=[],a.subjects=[],a.data={},h.resolve()},function(a){h.reject(a)}),a.uploaded=h.promise}}]),function(a){if("undefined"==typeof XLSX)return void console.log("xlsx.js is required. Get it from https://github.com/SheetJS/js-xlsx");if("undefined"==typeof _)return void console.log("Lodash.js is required. Get it from http://lodash.com/");var b=this,c=(b.XLSXReader,function(a,b,d,e){var f={};return c.utils.intializeFromFile(f,a,b,d,e),f});"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=c),exports.XLSXReader=c):b.XLSXReader=c,c.VERSION="0.0.1",c.utils={intializeFromFile:function(a,b,d,e,f){var g=new FileReader;g.onload=function(b){var g=b.target.result,h=XLSX.read(g,{type:"binary"});a.sheets=c.utils.parseWorkbook(h,d,e),f(a)},g.readAsBinaryString(b)},parseWorkbook:function(a,b,d){if(d===!0)return c.utils.to_json(a);var e={};return _.forEachRight(a.SheetNames,function(d){var f=a.Sheets[d];e[d]=c.utils.parseSheet(f,b)}),e},parseSheet:function(b,c){var d=XLSX.utils.decode_range(b["!ref"]),e=[];return c===!0&&_.forEachRight(_.range(d.s.r,d.e.r+1),function(c){var f=[];_.forEachRight(_.range(d.s.c,d.e.c+1),function(d){var e=XLSX.utils.encode_cell({c:d,r:c}),g=b[e];f[d]=g?g.v:a}),e[c]=f}),{data:e,name:b.name,col_size:d.e.c+1,row_size:d.e.r+1}},to_json:function(a){var b={};return a.SheetNames.forEach(function(c){var d=XLSX.utils.sheet_to_row_object_array(a.Sheets[c]);d.length>0&&(b[c]=d)}),b}}}.call(this),angular.module("bvcoeDmsApp").factory("XLSXReaderService",["$q","$rootScope",function(a,b){var c=function(a){angular.extec(this,a)};return c.readFile=function(c,d,e){var f=a.defer();return XLSXReader(c,d,e,function(a){b.$apply(function(){f.resolve(a)})}),f.promise},c}]),angular.module("bvcoeDmsApp").controller("AttendancesCtrl",["$rootScope","$scope","FirebaseRef","$q","$filter","$localStorage",function(a,b,c,d,e,f){function g(a,b){var c=parseInt(a),d=parseInt(b);return d>c?-1:c>d?1:0}a.$storage=f,c.child("teachers/"+f.authData.uid).once("value").then(function(a){f.userData=a.val(),b.$apply()});var h={},i=function(){b.attendances=[];var e=d.defer();return c.child("attendances/"+a.$storage.userData.dept).orderByChild("teacher").equalTo(a.$storage.authData.uid).once("value",function(a){b.attendances=a.val(),b.$apply(),e.resolve()},function(a){console.log(a),e.reject()}),e.promise},j=function(){var b=d.defer();return c.child("students/"+a.$storage.userData.dept).once("value",function(a){h=a.val(),b.resolve()},function(a){b.reject()}),b.promise},k=function(){var a=d.defer();return c.child("departments").once("value",function(c){b.depts=c.val(),a.resolve()},function(b){a.reject()}),a.promise},l=function(){var e=d.defer();return c.child("subjects/"+a.$storage.userData.dept).once("value",function(a){b.subjects=a.val(),e.resolve()},function(a){e.reject()}),e.promise};b.loadAttendanceData=function(){var a=d.defer();i().then(function(){j().then(function(){k().then(function(){l().then(function(){a.resolve()})})})}),b.promise=a.promise},b.years=[{id:"fe",name:"First Year"},{id:"se",name:"Second Year"},{id:"te",name:"Third Year"},{id:"be",name:"Final Year"}],b.types={th:"Theory",pr:"Practical"},b.showDept=function(a){for(var c in b.depts)if(a==c)return b.depts[c].name},b.showYear=function(a){var c=[];return a&&(c=e("filter")(b.years,{id:a})),c.length?c[0].name:"Not set"},b.showSem=function(a){return"Semester "+a},b.showSub=function(a){for(var c in b.subjects)if(a==c)return b.subjects[c].name},b.showType=function(a){return"th"==a.type?"Theory":"pr"==a.type?"Practical:  Batch "+a.batchno:void 0},b.showAbsent=function(a){var b=[];return"undefined"!=typeof a?(b=_.filter(h,function(b){return _.includes(a,b.uid)}),_.map(b,"rollno").sort(g).join(", ")):"No absentees"},b.checkRoll=function(a,b){var c=_.chain(h).filter(function(b){return b.year==a.year}).map("rollno").sort(g).value(),d=b.split(/[ ,]+/);if(console.log(d.length),_.every(d,function(a){return _.includes(c,a)}));else if(""!=d[0])return"Some roll numbers are invalid"};var m=new Firebase("https://hazrisv.firebaseio.com");b.saveAtt=function(a,e,g){console.log(a),console.log(e),console.log(g);var i=g.absentno.split(/[ ,]+/),j=_.chain(h).filter(function(a){return a.year==e.year}).map("uid").value(),k=_.chain(h).filter(function(a){return a.year==e.year&&_.includes(i,a.rollno)}).map("uid").value();""==i[0]&&(k=[]);var l=_.difference(j,k),n=d.defer();return c.child("attendances/"+f.userData.dept+"/"+a).once("value",function(d){var h=d.val();console.log("old",h),m.child("serviceQueue/changed/old/"+a).update(h,function(d){if(d)n.reject();else{var h={absentno:k,date:g.date,dept:e.dept,noofhours:e.noofhours,presentno:l,semester:e.semester,subid:e.subid,teacher:e.teacher,timestamp:Firebase.ServerValue.TIMESTAMP,topic:e.topic,type:e.type,year:e.year};console.log("new",h),c.child("attendances/"+f.userData.dept+"/"+a).update(h,function(c){c?(console.log(c),n.reject()):(b.attendances[a].absentno=k,b.attendances[a].presentno=l,m.child("serviceQueue/changed/new/"+a).update(h,function(a){a||n.resolve()}))})}})}),n.promise},b.deleteAtt=function(a,d){console.log("del"),console.log(a),c.child("attendances/"+f.userData.dept+"/"+a).remove(),m.child("serviceQueue/rollback/"+a).update(b.attendances[a],function(c){c||(delete b.attendances[a],d.$cancel(),b.$apply())})},b.cancel=function(a){a.$cancel()}}]),angular.module("bvcoeDmsApp").controller("GendefaulterCtrl",["$scope","$http","$q","restapiurl","$uibModal",function(a,b,c,d,e){a.message={success:!1},a.generate=function(e,f,g){var h=c.defer();b({method:"GET",url:d+"/generateDefaulter/"+e+"/"+f+"/"+g}).then(function(b){console.log(b),h.resolve(),a.message.success=!0},function(a){h.reject()}),a.promise=h.promise}}]),angular.module("bvcoeDmsApp").constant("restapiurl","http://hazri.herokuapp.com"),angular.module("bvcoeDmsApp").controller("ExtrasCtrl",["$scope","FirebaseRef","$q","$rootScope",function(a,b,c,d){var e=d.$storage.userData.dept,f=c.defer();b.child("students/"+e).orderByChild("year").equalTo(d.$storage.userData.year).once("value",function(c){a.students=c.val(),b.child("extras/"+e).orderByChild("year").equalTo(d.$storage.userData.year).once("value",function(b){var c=b.val();for(var d in c)a.students[d].extra=c[d].extra;a.$apply(),f.resolve()})}),a.stuPromise=f.promise,a.updateExtra=function(a,d){var f=c.defer();return b.child("extras/"+e+"/"+a.uid).update({extra:d,year:a.year},function(a){a?f.reject():f.resolve()}),f.promise}}]),angular.module("bvcoeDmsApp").filter("orderObjectBy",function(){return function(a,b,c){var d=[];return angular.forEach(a,function(a){d.push(a)}),d.sort(function(a,c){var d=a[b],e=c[b];return isNaN(d)||isNaN(e)||(d=parseInt(d),e=parseInt(e)),d>e?1:-1}),c&&d.reverse(),d}}),angular.module("bvcoeDmsApp").directive("toggle",function(){return{restrict:"A",link:function(a,b,c){"tooltip"==c.toggle&&$(b).tooltip(),"popover"==c.toggle&&$(b).popover()}}}).directive("contenteditable",function(){return{require:"ngModel",link:function(a,b,c,d){b.bind("blur",function(){a.$apply(function(){d.$setViewValue(b.html())})}),d.$render=function(){b.html(d.$viewValue)},d.$render()}}}),angular.module("bvcoeDmsApp").controller("ModalCtrl",["defaulters","$scope","$q","$http","$uibModalInstance",function(a,b,c,d,e){b.students=a,b.checkDefaulter=function(a){return"75">a?!0:!1},b.sendmessage=function(a){var f=c.defer(),g="",h="Your wards attendance is lower than 75%";h=encodeURI(h);for(var i in a){var j=a[i];j.percent<"75"&&10==j.pphone.length&&(console.log(j.name+" => "+j.percent+"% => "+j.pphone),g+="91"+j.pphone+","),j.percent<"75"&&10!=j.pphone.length&&console.log("Invalid phone number => "+j.name+" => "+j.percent+"% => "+j.pphone)}g=g.slice(0,-1);var k="http://smsc.smsconnexion.com/api/gateway.aspx?action=send&username=bharati&passphrase=123456&message="+h+"&phone="+g;d({method:"GET",url:k}).then(function(a){console.log(a),f.resolve(),e.close(!0)},function(a){console.log(a),f.reject(),e.close(!1)}),b.sendsms=f.promise},b.cancel=function(){e.dismiss("cancel")}}]),angular.module("bvcoeDmsApp").filter("objectFilter",function(){return function(a,b){if(null==b||"undefined"==typeof b)return a;var c={};return angular.forEach(a,function(a,d){a.year==b.year&&a.type==b.type&&(c[d]=a)}),c}}),angular.module("bvcoeDmsApp").controller("LazyattendancesCtrl",["$scope","$q","FirebaseRef",function(a,b,c){var d={};a.years=[],a.depts=[],a.students=[],a.batches=[],a.subs={};var e=0,f=[];a.getStudents=function(){a.students=[],c.child("students/"+a.selected.dept).orderByChild("year").equalTo(a.selected.year).once("value",function(b){_.forEach(b.val(),function(b,c){"pr"==a.selected.type?+b.rollno>=f[a.selected.batch].startRoll&&+b.rollno<=f[a.selected.batch].endRoll&&a.students.push({uid:c,rollno:parseInt(b.rollno),name:b.name}):a.students.push({uid:c,rollno:parseInt(b.rollno),name:b.name})}),a.students=_.sortBy(a.students,function(a){return parseInt(a.rollno)}),a.$apply()},function(a){})};var g=function(){var d=b.defer();return c.child("departments").once("value",function(b){_.forEach(b.val(),function(b,c){a.depts.push({id:c,name:b.name})}),d.resolve()},function(a){d.reject()}),d.promise};a.getSubjects=function(){a.selected.batch=null,"pr"==a.selected.type&&h(),a.subs={},c.child("subjects/"+a.selected.dept).orderByChild("sem").equalTo(a.selected.sem).once("value",function(b){_.forEach(b.val(),function(b,c){(b.theory&&"th"==a.selected.type||b.practical&&"pr"==a.selected.type)&&(a.subs[c]=b)}),a.$apply()},function(a){})};var h=function(){a.batches=[],c.child("studentCount/"+a.selected.dept+"/"+a.selected.dept+"-"+a.selected.year).once("value",function(b){console.log(b.val());var c=b.val().batchno.length-1;e=b.val().count,f=[];for(var d=1;c>=d;d++)a.batches.push({id:d,name:"Batch "+d}),f[d]={},f[d].startRoll=+b.val().batchno[d],f[d].endRoll=+b.val().batchno[d+1]-1||+e;console.log(f)})},i=function(){var e=b.defer();return c.child("year").once("value",function(b){var c=b.val();_.forEach(c,function(b,c){a.years[b.level-1]={id:c,name:b.name},d[c]=b.sems}),e.resolve()},function(a){e.reject()}),e.promise},j=b.defer();g().then(function(){i().then(function(){j.resolve()})}),a.promise=j.promise,a.setSem=function(){a.selected.sem=null,a.sems=d[a.selected.year],a.selected.type=null,a.selected.batch=null,a.selected.sub=null},a.submit=function(d){console.log(d);var e,f=[];_.forEach(d,function(b){var d={att:+b.att,totalAtt:+b.totalAtt};e=c.child("lazyAttendances/"+a.selected.dept+"/"+b.uid+"/"+a.selected.type+"/"+a.selected.sub).update(d),f.push(e)}),b.all(f).then(function(b){console.log(b,"done"),a.students=[]})}}]),angular.module("bvcoeDmsApp").controller("AdminpanelCtrl",["$scope","FirebaseRef","$q",function(a,b,c){a.reset=function(a){var b=new Firebase("https://hazrisv.firebaseio.com/commands");b.push({command:"reset",dept:a})},a.changeUID=function(d,e,f){var g=c.defer();if(d=d.toUpperCase(),e=e.toUpperCase(),console.log(d,e,f),d==e)throw"same uid";var h;b.child("students/"+f+"/"+d).once("value").then(function(a){var c=a.val();if(h=c.year,null!=c)return c.uid=e,b.child("students/"+f+"/"+e).update(c);throw"invalid uid"}).then(function(){return b.child("students/"+f+"/"+d).remove()}).then(function(){return b.child("attendances/"+f).orderByChild("year").equalTo(h).once("value")}).then(function(a){var c=a.val();return _.forEach(c,function(a,b){a.absentno=_.map(a.absentno,function(a){return a===d?e:a}),a.presentno=_.map(a.presentno,function(a){return a===d?e:a})}),console.log("after",c),b.child("attendances/"+f).update(c)}).then(function(a){console.log("done",a),g.resolve()},function(a){console.log(a),g.reject()}),a.finished=g.promise}}]),angular.module("bvcoeDmsApp").controller("EyellowbookCtrl",["$scope","$http","$localStorage","FirebaseRef","$q","ngToast",function(a,b,c,d,e,f){var g;a.sublists=[],a.data={},a.students,a.LA={},a.edited={},a.edit={},a.deleteAuthData=function(){delete c.authData.uid.a,f.create({className:"warning",content:"Uploaded Successfully",dismissOnTimeout:!0,timeout:1e3})},a.enableEditing=function(b){a.edit[b]=!0},a.doneEditing=function(b){a.edit[b]=!1},a.clearEdit=function(){a.edited={},a.edit={}},a.checkEmptyObject=function(a){return angular.equals({},a)};var h=e.defer();b({method:"GET",url:"http://localhost:5000/getEyellowBookData/"+c.authData.uid}).then(function(a){g=a.data},function(){h.reject()})["finally"](function(){Object.keys(g).forEach(function(b){var c;Object.keys(g[b]).forEach(function(e){d.child("subjects/"+e+"/"+b).once("value",function(a){c=a.exists()?a.val().name:b}).then(function(){Object.keys(g[b][e]).forEach(function(d){"pr"===d?Object.keys(g[b][e][d]).forEach(function(f){a.sublists.push(c+" > "+e+" > "+d+" > B"+f),a.data[c+" > "+e+" > "+d+" > B"+f]=g[b][e][d][f]}):(a.sublists.push(c+" > "+e+" > "+d),a.data[c+" > "+e+" > "+d]=g[b][e][d])})})})}),h.resolve()}),a.promise=h.promise,a.showEyellowBook=function(b){var c=e.defer(),f=a.data[b].year,g=a.data[b].dept,h=a.data[b].type,i=a.data[b].subid,j=+a.data[b].batchno||0;d.child("students/"+g).orderByChild("year").equalTo(f).once("value",function(b){if("pr"===h)a.students={},d.child("studentCount/"+g+"/"+g+"-"+f+"/batchno").once("value",function(c){var e=+c.val()[j],f=0;b.forEach(function(l){if(c.val()[j+1]){var m=+c.val()[j+1];+l.val().rollno<m&&+l.val().rollno>=e&&(a.students[l.key()]=l.val())}else+l.val().rollno>=e&&(a.students[l.key()]=l.val());d.child("lazyAttendances/"+g+"/"+l.key()+"/"+h+"/"+i).once("value",function(b){b.exists()?a.LA[l.key()]=b.val():a.LA[l.key()]={att:0,totalAtt:0}}).then(function(){++f==Object.keys(b.val()).length&&k()})})});else{var c=0;b.forEach(function(e){d.child("lazyAttendances/"+g+"/"+e.key()+"/"+h+"/"+i).once("value",function(b){b.exists()?a.LA[e.key()]=b.val():a.LA[e.key()]={att:0,totalAtt:0}}).then(function(){++c==Object.keys(b.val()).length&&(a.students=b.val(),k())})})}});var k=function(){a.selection=a.data[b].att,c.resolve()};a.promise1=c.promise},a.click=function(b,c){console.log(b);var d=a.selection[b].absentno.indexOf(c),e=a.selection[b].presentno.indexOf(c);d>-1&&(a.selection[b].absentno.splice(d,1),a.selection[b].presentno.push(c)),e>-1&&(a.selection[b].presentno.splice(e,1),a.selection[b].absentno.push(c)),a.edited[b]=a.selection[b]},a.upload=function(){var b=new Firebase("https://hazrisv.firebaseio.com");a.edit={},a.edited&&Object.keys(a.edited).forEach(function(c){var e=a.edited[c].dept;delete a.edited[c].$$hashKey,a.edited[c].timestamp=Firebase.ServerValue.TIMESTAMP;var g=a.edited[c];d.child("attendances/"+e+"/"+c).once("value",function(h){console.log(h.val(),g),b.child("serviceQueue/changed/old/"+c).update(h.val(),function(h){h||d.child("attendances/"+e+"/"+c).update(g).then(function(){b.child("serviceQueue/changed/new/"+c).update(g,function(b){delete a.edited[c],f.create({className:"warning",content:"Uploaded Successfully"}),console.log("allDoneSuccessfully")})})})})})}}]),angular.module("bvcoeDmsApp").run(["$templateCache",function(a){a.put("views/adminpanel.html",'<div class="container"> <p>This is the adminPanel view.</p> <h3>Reset calculatedAttendances</h3> <form role="form"> <div class="form-group"> <label for="dept">Dept id:</label> <input type="text" class="form-control" id="dept" ng-model="dept"> </div> <button class="btn btn-default" ng-click="reset(dept)">Reset calculatedAttendances</button> </form> <h3>Change UID</h3> <form role="form" class="form-inline"> <div class="form-group"> <label for="deptuid">Dept id:</label> <input type="text" class="form-control" id="deptuid" ng-model="dept"> </div> <div class="form-group"> <label for="uid1">Original UID:</label> <input type="text" class="form-control" id="uid1" ng-model="uid1"> </div> <div class="form-group"> <label for="uid2">New UID:</label> <input type="text" class="form-control" id="uid2" ng-model="uid2"> </div> <div class="form-group"> <button class="btn btn-default" ng-click="changeUID(uid1, uid2, dept)">Change {{uid1}} to {{uid2}}</button> </div> </form> <div cg-busy="{promise: finished}"></div> </div>'),a.put("views/attendances.html",'<div class="container"> <div cg-busy="{promise:promise, message:\'Loading..\', backdrop:true}"></div> <div class="form-inline"> <div class="form-group"> <button class="btn btn-primary" ng-click="loadAttendanceData()">Load Attendances</button> </div> <div class="form-group"> <label>Type</label> <div class="btn-group"> <label class="btn btn-default"> <input type="radio" ng-model="search.type" value="th"> Theory </label> <label class="btn btn-default"> <input type="radio" ng-model="search.type" value="pr"> Practical </label> </div> </div> <div class="form-group"> <label>Class</label> <div class="btn-group"> <label class="btn btn-default"> <input type="radio" ng-model="search.year" value="se"> SE </label> <label class="btn btn-default"> <input type="radio" ng-model="search.year" value="te"> TE </label> <label class="btn btn-default"> <input type="radio" ng-model="search.year" value="be"> BE </label> </div> </div> <div class="form-group"> <button class="btn btn-info" ng-click="search = null ">Clear filters</button> </div> </div> <table class="table table-striped table-condensed table-responsive"> <tr> <th style="width:5%">Sr. No</th> <th style="width:10%">Class</th> <th style="width: 10%">Subject</th> <th style="width: 10%">Type</th> <th>Absent Numbers</th> <th style="width: 12%">Date</th> <th style="width: 5%">Edit</th> </tr> <tr ng-repeat="(key, item) in attendances | objectFilter:search track by $index"> <td>{{$index + 1}}</td> <td> <span>{{showDept(item.dept)}}</span> <span>{{(item.year).toUpperCase()}}</span> <span>{{showSem(item.semester)}}</span> </td> <td> <span>{{showSub(item.subid)}}</span> </td> <td> <span>{{showType(item)}}</span> </td> <td style="z-index: 999"> <div> <a href="" title="" data-toggle="popover" data-content="{{showAbsent(item.absentno)}}" data-trigger="hover">Absentees</a> </div> <span editable-text="item.absentnostring" onshow="item.absentnostring = showAbsent(item.absentno)" e-name="absentno" e-form="rowform" onbeforesave="checkRoll(item, $data)"> </span> </td> <td> <a editable-text="item.date" e-form="rowform" e-name="date"> {{item.date | date:dd/MM/yyyy}} </a> </td> <td style="white-space: nowrap"> <form editable-form name="rowform" onbeforesave="saveAtt(key, item, $data)" ng-show="rowform.$visible" class="form-buttons form-inline"> <button type="submit" ng-disabled="rowform.$waiting" class="btn btn-primary"> save </button> <button class="btn btn-danger" confirm="Are you sure to delete this attendance from database?" ng-disabled="rowform.$waiting" ng-click="deleteAtt(key, rowform)">del</button> <button type="button" ng-disabled="rowform.$waiting" ng-click="cancel(rowform)" class="btn btn-default"> cancel </button> </form> <div class="buttons" ng-show="!rowform.$visible"> <button class="btn btn-primary" ng-click="rowform.$show()">edit</button> </div> </td> </tr> </table> </div>'),a.put("views/dashboard.html",'<div class="container"> <p>This is the dashboard view.</p> <div class="panel panel-default" ng-if="false"> <div class="panel-heading"> <h3 class="panel-title">Push Notifications</h3> </div> <div class="panel-body"> <form class="form-signin"> <div class="input-group"> <label for="title" class="sr-only">Title</label> <span class="input-group-addon"><span class="glyphicon glyphicon-envelope"></span></span> <input type="text" id="title" class="form-control" placeholder="Title" ng-model="notif.title" required autofocus> </div> <div class="input-group"> <label for="body" class="sr-only">Password</label> <span class="input-group-addon"><span class="glyphicon glyphicon-lock"></span></span> <input type="textarea" id="body" class="form-control" placeholder="Notification body" ng-model="notif.body" required> </div> <div class="input-group"> <label for="tokens" class="sr-only">Password</label> <span class="input-group-addon"><span class="glyphicon glyphicon-lock"></span></span> <input type="textarea" id="tokens" class="form-control" placeholder="tokens" ng-model="notif.tokens" required> </div> <button class="btn btn-primary btn-block" ng-click="push(notif)">Push</button> </form> </div> </div> </div>'),a.put("views/dataentry.html",'<div class="container"> <h4 class="text-center">Data Entry Form</h4> <!--<form name="form" enctype="multipart/form-data" class="col-md-6">\r\n\r\n  <div class=\'form-group\'>\r\n    <div class="input-group">\r\n        <button class="btn btn-default" ng-click="download()">Please download excel format</button>\r\n         </div>\r\n  </div>\r\n\r\n  <div class=\'form-group\'>\r\n    <div class="input-group">\r\n      <span class="input-group-addon" id="basic-addon3">Choose your excel file</span>\r\n      <input class="form-control" type="file" id="excel_file" accept=".xlsx, .xls" onchange="angular.element(this).scope().fileChanged(this.files);">\r\n    </div>\r\n  </div>\r\n  <div class="alert alert-success" ng-show="!isProcessing">\r\n    Sheet Loaded\r\n  </div>\r\n  <div class="alert alert-success" ng-if="success">{{success}}</div>\r\n  <button class="btn btn-info" ng-disabled="isProcessing" ng-click="upload()">Upload to database</button>\r\n  <div cg-busy="{promise:loading, message:\'Uploading..\', backdrop:true}"></div>\r\n</form>--> <form name="form" class="form-horizontal" role="form"> <div class="form-group"> <label class="control-label col-sm-2" for="dept">Department Name:</label> <div class="col-sm-10"> <input type="text" class="form-control" id="dept" ng-model="data.deptname" placeholder="Computer, Instrumentation, Mechanical"> <p class="help-block">For e.g <code>Computer</code> for Computer Department, <code>Mechanical Division A</code> for Mechanical Division A Department</p> </div> </div> <div class="form-group"> <label class="control-label col-sm-2" for="deptid">Department ID:</label> <div class="col-sm-10"> <input type="text" class="form-control" id="deptid" ng-model="data.deptid" placeholder="cs, is, me-a, me-b"> <p class="help-block">For e.g <code>cs</code> for Computer, <code>me-a</code> for Mechanical Division A. Make sure it does not contain spaces. </p> </div> </div> <div class="form-group"> <label class="control-label col-sm-2" for="hod">HOD name:</label> <div class="col-sm-10"> <input type="text" class="form-control" id="hod" ng-model="data.hod" placeholder="Fullname of HOD"> </div> </div> <div class="form-group"> <label class="control-label col-sm-2" for="yearid">Year:</label> <div class="col-sm-10"> <input type="text" class="form-control" id="yearid" ng-model="data.yearid" placeholder="fe, se, te, be, me"> <p class="help-block">For e.g <code>fe</code> for 1st year, <code>se</code> for 2nd year. Make sure it does not contain spaces.</p> </div> </div> <div class="form-group"> <label class="control-label col-sm-2" for="semid">Semester:</label> <div class="col-sm-10"> <input type="number" maxlength="1" min="1" max="8" class="form-control" ng-model="data.semid" id="semid" placeholder="1, 2, 3, 4, 5, 6, 7, 8"> <p class="help-block">For e.g <code>1</code> for Semester 1, <code>2</code> for Semester 2. Make sure it does not contain spaces.</p> </div> </div> <div class="form-group"> <label class="control-label col-sm-2" for="advisor">Class Advisor name:</label> <div class="col-sm-10"> <input type="text" class="form-control" id="advisor" ng-model="data.advisor" placeholder="Fullname of Class Advisor"> </div> </div> <div class="form-group"> <label class="control-label col-sm-2" for="totalStu">Total Students:</label> <div class="col-sm-10"> <input type="number" min="1" maxlength="3" class="form-control" ng-model="data.totalStudents" id="totalStu" placeholder="Total number of students" ng-change="createStudents(data.totalStudents)"> </div> </div> <div class="form-group"> <label class="control-label col-sm-2" for="totalBatches">No of batches for practicals:</label> <div class="col-sm-10"> <input type="number" min="1" maxlength="3" class="form-control" ng-model="data.totalBatches" id="totalBatches" placeholder="Total number of batches" ng-change="createBatches(data.totalBatches)"> </div> </div> <div class="form-group" ng-repeat="batch in batchInfo"> <label class="control-label col-sm-2" for="">Batch {{batch.id}} starts with rollno:</label> <div class="col-sm-10"> <input type="number" min="1" maxlength="3" class="form-control" ng-model="batch.rollno" id="" placeholder="Starting rollno for this batch?"> </div> </div> <div class="form-group" ng-if="students.length > 0"> <label class="control-label col-sm-2" for="">Students Information:</label> <div class="col-sm-10"> <hot-table settings="{colHeaders: colHeaders, contextMenu: false, afterChange: afterChange}" datarows="students" allow-insert-column="false" allow-insert-row="false" max-rows="students.length" max-cols="6"> <hot-column data="uid" title="\'Unique ID\'" validator="uidValidator"></hot-column> <hot-column data="rollno" title="\'Rollno\'" read-only></hot-column> <hot-column data="name" title="\'Name\'" width="150" type="grayedOut"></hot-column> <hot-column data="phone" title="\'Phone\'" width="150" validator="phoneValidator"></hot-column> <hot-column data="pphone" title="\'Parents Phone\'" width="150" validator="phoneValidator"></hot-column> <hot-column data="gender" title="\'Gender (m/f)\'" width="100" validator="genderValidator"></hot-column> </hot-table> </div> </div> <div class="form-group" ng-if="subjects.length > 0"> <label class="control-label col-sm-2" for="">Subjects Information:</label> <div class="col-sm-10"> <p class="help-text">To add a new row, right click into a cell and Insert row below</p> <hot-table columns="subjectColumns" context-menu="true" allow-insert-row="true" datarows="subjects"> </hot-table> </div> </div> <div class="row"> <div class="col-sm-2"></div> <button class="btn btn-info btn-lg col-sm-4" ng-click="submit(data, batchInfo, students, subjects)">Submit</button> </div> <div cg-busy="{promise:uploaded, message:\'Uploading..\', backdrop:true}"></div> </form> </div>'),
a.put("views/defaulters.html",'<div class="container"> <div class="row"> <div class="col-md-4"> <div class="panel panel-default"> <div class="panel-heading"> <h3 class="panel-title">View Defaulters</h3> </div> <div class="panel-body"> <form class="form-signin"> <div class="input-group"> <label for="inputDept" class="sr-only">Department</label> <span class="input-group-addon"><span class="glyphicon glyphicon-briefcase"></span></span> <select id="inputDept" class="form-control" ng-model="form.dept"> <option ng-repeat="dept in depts" value="{{dept.id}}">{{dept.name}}</option> </select> <div cg-busy="deptpromise"></div> </div> <div class="input-group"> <label for="inputYear" class="sr-only">Year</label> <span class="input-group-addon"><span class="glyphicon glyphicon-signal"></span></span> <select id="inputYear" class="form-control" ng-model="form.year"> <option ng-repeat="year in years" value="{{year.id}}">{{year.name}}</option> </select> </div> <div class="input-group"> <label for="inputSem" class="sr-only">Year</label> <span class="input-group-addon"><span class="glyphicon glyphicon-signal"></span></span> <select id="inputSem" class="form-control" ng-model="form.sem"> <option value="{{2 * form.year - 1}}">Semester {{2 * form.year - 1}}</option> <option value="{{2 * form.year}}">Semester {{2 * form.year}}</option> </select> </div> <button class="btn btn-primary btn-block" ng-click="loadDefaulters(form)">Go</button> <div cg-busy="{promise:promise, message:\'Loading in..\', backdrop:true}"></div> </form> </div> </div> </div> <div class="col-md-8" ng-show="defaulters.length>0"> <div class="panel panel-default"> <div class="panel-heading"> <h3 class="panel-title">Defaulters</h3> </div> <div class="panel-body"> <table class="table table-condensed"> <tr> <th>Name</th> <th>Date</th> <th>Link</th> <th ng-if="$storage.userData.role == \'advisor\' || $storage.userData.role == \'hod\'">Send SMS</th> </tr> <tr ng-repeat="item in defaulters"> <td>{{item.dept | uppercase}} {{item.year | uppercase}} Sem {{item.sem}}</td> <td>{{item.date | date:\'dd MMMM, yyyy\'}}</td> <td><a href="" ng-click="download(item)">Download</a></td> <td ng-if="$storage.userData.role == \'advisor\' || $storage.userData.role == \'hod\'"> <a href="" ng-click="viewDefaulters(item)">Defaulter students</a> </td> </tr> </table> </div> </div> </div> </div> <div class="alert alert-success" ng-if="sms.success">Sms sent successfully</div> </div>'),a.put("views/extras.html",'<div class="container"> <h3>{{$storage.userData.dept}} {{$storage.userData.year}} sem{{$storage.userData.sem}}</h3> <div cg-busy="{promise:stuPromise}"></div> <table class="table table-striped"> <tr> <th>Rollno</th> <th>Name</th> <th>Extra Curricular Attendance</th> </tr> <tr ng-repeat="student in students | orderObjectBy:\'rollno\':false"> <td>{{student.rollno}}</td> <td>{{student.name}}</td> <td><a href="#" editable-text="student.extra" onbeforesave="updateExtra(student, $data)">{{ student.extra || "0" }}</a></td> </tr> </table> </div>'),a.put("views/eyellowbook.html",'<div> <ul class="nav nav-pills center"> <toast></toast> <li><a ng-click="deleteAuthData()">Delete</a></li> <li ng-repeat="val in sublists"><a ng-click="showEyellowBook(val)">{{val}}</a></li> <li ng-hide="checkEmptyObject(edited)"> <button type="button" ng-click="upload()" class="center btn btn-primary"> Upload </button> <button type="button" ng-click="clearEdit()" class="center btn btn-success"> Clear Edits </button> </li> </ul> <div cg-busy="{promise:promise, message:\'Loading..\', backdrop:true}"></div> </div> <div cg-busy="{promise:promise1, message:\'Loading..\', backdrop:true}"></div> <div class="tableContainer" ng-show="selection"> <div class="fixed"><em>Editable Sheet</em></div> <div class="scrollable"> <table class="table table-bordered"> <thead> <tr> <th rowspan="3">Roll No</th> <th ng-repeat="data in selection | orderObjectBy: \'date\'"><span class="glyphicon glyphicon-calendar"></span> {{data.date| date: \'dd/MM\'}}</th> <th rowspan="3">Lazy Att.</th> <th rowspan="3">Cumm Att.</th> </tr> <tr> <th ng-repeat="data in selection | orderObjectBy: \'date\'"><span class="glyphicon glyphicon-hourglass"></span> {{data.noofhours}}</th> </tr> <tr> <td ng-repeat="data in selection | orderObjectBy: \'date\'"> <span editable-text="data.topic" e-name="name" e-form="data.$index" onbeforesave="checkName($data)"> <span class="glyphicon glyphicon-pencil" data-toggle="tooltip" data-original-title="{{data.topic}}"></span> </span> </td> </tr> </thead> <tbody> <tr ng-repeat="student in students | orderObjectBy :\'rollno\'"> <th>{{student.rollno}}</th> <td ng-repeat="(key,data) in selection"> <div data-toggle="tooltip" ng-click="!edit[key]||click(key,student.uid)" data-original-title="{{student.name}}" class="center" ng-class="{absent: data.absentno.indexOf(student.uid) > -1,present:data.presentno.indexOf(student.uid) > -1,editMode:edit[key]==true}"></div> </td> <td>{{LA[student.uid].att}}</td> <td>{{cumatt[student.uid].att}}</td> </tr> <tr> <td>&nbsp;</td> <td ng-repeat="(key,data) in selection"> <button type="button" ng-click="enableEditing(key)" ng-show="!edit[key]" class="btn btn-primary"> Edit </button> <button type="button" ng-click="doneEditing(key)" ng-show="edit[key]" class="btn btn-success"> Done </button> </td> <td>&nbsp;</td> <td>&nbsp;</td> </tr> </tbody> </table> </div> </div>'),a.put("views/gendefaulter.html",'<div class="container"> <div class="row" ng-if="$storage.userData.role == \'advisor\' || $storage.userData.role == \'hod\'"> <div class="col-md-6"> <div class="panel panel-default"> <div class="panel-heading"> <h3 class="panel-title">Generate Defaulters for {{$storage.userData.dept}} {{$storage.userData.year}} {{$storage.userData.sem}}</h3> </div> <div class="panel-body"> <form class="form-signin"> <button class="btn btn-primary btn-block" ng-click="generate($storage.userData.dept,$storage.userData.year,$storage.userData.sem)">Go</button> <div cg-busy="{promise:promise, message:\'Loading ..\', backdrop:true}"></div> <div class="alert alert-success" ng-if="message.success">Defaulter generated successfully. Go to <a href="#/defaulters">View defaulters</a> to view it.</div> </form> </div> </div> </div> </div> </div>'),a.put("views/lazyattendances.html",'<div class="container"> <div cg-busy="{promise:promise}"></div> <form class="form-inline" role="form"> <div class="form-group"> <label for="dept">Department:</label> <select class="form-control" id="dept" ng-model="selected.dept"> <option ng-repeat="dept in depts" value="{{dept.id}}">{{dept.name}}</option> </select> </div> <div class="form-group"> <label for="year">Year:</label> <select class="form-control" id="year" ng-change="setSem()" ng-model="selected.year"> <option ng-repeat="year in years" value="{{year.id}}">{{year.name}}</option> </select> </div> <div class="form-group"> <label for="sem">Semester:</label> <select class="form-control" id="sem" ng-model="selected.sem"> <option ng-repeat="sem in sems" value="{{sem.id}}">{{sem.name}}</option> </select> </div> <div class="form-group"> <label for="type">Type:</label> <select class="form-control" id="type" ng-model="selected.type" ng-change="getSubjects()"> <option value="th">Theory</option> <option value="pr">Practical</option> </select> </div> <div class="form-group" ng-if="selected.type == \'pr\'"> <label for="type">Batch:</label> <select class="form-control" id="batch" ng-model="selected.batch" ng-change="selected.sub = null"> <option ng-repeat="batch in batches" value="{{batch.id}}">{{batch.name}}</option> </select> </div> <div class="form-group"> <label for="sub">Subjects:</label> <select class="form-control" id="sub" ng-model="selected.sub" ng-change="getStudents()"> <option ng-repeat="(id,sub) in subs" value="{{id}}">{{sub.name}}</option> </select> </div> {{selected}} </form> <hot-table settings="{colHeaders: colHeaders, contextMenu: false, afterChange: afterChange}" datarows="students" allow-insert-column="false" allow-insert-row="false" max-rows="students.length" max-cols="4"> <hot-column data="rollno" title="\'Rollno\'" read-only></hot-column> <hot-column data="name" title="\'Name\'" type="grayedOut" read-only></hot-column> <hot-column data="att" title="\'Attendance\'" width="150"></hot-column> <hot-column data="totalAtt" title="\'Total Lectures\'" width="150"></hot-column> </hot-table> <button class="btn btn-info" ng-click="submit(students)">Submit</button> </div>'),a.put("views/main.html",'<div class="container"> <div class="row"> <div class="col-md-6"> <div class="panel panel-default"> <div class="panel-heading"> <h3 class="panel-title">Teacher\'s Login</h3> </div> <div class="panel-body"> <form class="form-signin"> <div class="input-group"> <label for="loginEmail" class="sr-only">Email address</label> <span class="input-group-addon"><span class="glyphicon glyphicon-envelope"></span></span> <input type="email" id="loginEmail" class="form-control" placeholder="Email address" ng-model="user.email" required autofocus> </div> <div class="input-group"> <label for="loginPassword" class="sr-only">Password</label> <span class="input-group-addon"><span class="glyphicon glyphicon-lock"></span></span> <input type="password" id="loginPassword" class="form-control" placeholder="Password" ng-model="user.pass" required> </div> <button class="btn btn-primary btn-block" ng-click="login(user)">Sign in</button> <div cg-busy="{promise:promise, message:\'Signing in..\', backdrop:true}"></div> <div class="alert" ng-class="{\'alert-success\':loginResult.success, \'alert-danger\':!loginResult.success}" ng-show="!loginResult.success" style="margin-top: 1em" role="alert">{{loginResult.message}}</div> </form> </div> </div> </div> <div class="col-md-6"> <div class="panel panel-default"> <div class="panel-heading"> <h3 class="panel-title">Teacher\'s Registration</h3> </div> <div class="panel-body"> <form class="form-signin" name="regform" ng-submit="register(reg)" ng-init="reg = {}"> <div class="input-group" ng-class="{ \'has-error\' : regform.name.$invalid && !regform.name.$pristine }"> <label for="inputName" class="sr-only">Full Name</label> <span class="input-group-addon"><span class="glyphicon glyphicon-user"></span></span> <input type="text" id="inputName" name="name" class="form-control" placeholder="Full name" ng-model="reg.name" required> </div> <p ng-show="regform.name.$invalid && !regform.name.$pristine" class="help-block">Your name is required.</p> <div class="input-group"> <label for="inputDept" class="sr-only">Department</label> <span class="input-group-addon"><span class="glyphicon glyphicon-briefcase"></span></span> <select id="inputDept" class="form-control" ng-model="reg.dept"> <option ng-repeat="dept in depts" value="{{dept.id}}">{{dept.name}}</option> </select> </div> <div class="input-group" ng-class="{ \'has-error\' : regform.email.$invalid && !regform.email.$pristine }"> <label for="inputEmail" class="sr-only">Email address</label> <span class="input-group-addon"><span class="glyphicon glyphicon-envelope"></span></span> <input type="email" id="inputEmail" name="email" class="form-control" placeholder="Email address" ng-model="reg.email" required> </div> <p ng-show="regform.email.$invalid && !regform.email.$pristine" class="help-block">Email is invalid.</p> <div class="input-group" ng-class="{ \'has-error\' : regform.pass.$invalid && !regform.pass.$pristine }"> <label for="inputPassword" class="sr-only">Password</label> <span class="input-group-addon"><span class="glyphicon glyphicon-lock"></span></span> <input type="password" id="inputPassword" name="pass" class="form-control" placeholder="Password" minlength="6" ng-model="reg.pass" required> </div> <p ng-show="regform.pass.$invalid && !regform.pass.$pristine" class="help-block">Passwords min length should be 6</p> <div class="input-group" ng-class="{ \'has-error\' : regform.pass2.$invalid && !regform.pass2.$pristine }"> <label for="inputPassword2" class="sr-only">Confirm Password</label> <span class="input-group-addon"><span class="glyphicon glyphicon-lock"></span></span> <input type="password" id="inputPassword2" name="pass2" class="form-control" placeholder="Confirm password" minlength="6" ng-model="reg.pass2" required compare-to="reg.pass"> </div> <p ng-show="regform.pass2.$invalid && !regform.pass2.$pristine" class="help-block">Passwords must match</p> <div class="input-group"> <label for="inputToken" class="sr-only">Token</label> <span class="input-group-addon"><span class="glyphicon glyphicon-pencil"></span></span> <input type="text" id="inputToken" class="form-control" placeholder="Token" ng-model="reg.token" required> </div> <div class="input-group"> <label>Teacher Type:</label> <div class="radio"> <label><input type="radio" name="teacherRole" value="hod" ng-model="reg.teacherrole" ng-click="reg.year = null">HOD</label> <label><input type="radio" name="teacherRole" value="advisor" ng-model="reg.teacherrole">ClassAdvisor</label> <label><input type="radio" name="teacherRole" value="normal" ng-model="reg.teacherrole" ng-click="reg.year = null" ng-checked="true">Normal</label> </div> </div> <div class="input-group" ng-if="reg.teacherrole == \'advisor\'"> <label for="inputYear" class="sr-only">Year</label> <span class="input-group-addon"><span class="glyphicon glyphicon-briefcase"></span></span> <select id="inputYear" class="form-control" ng-model="reg.year" ng-change="sems = years[reg.year][\'sems\']"> <option ng-repeat="year in years" value="{{year.id}}">{{year.name}}</option> </select> </div> <button type="submit" class="btn btn-primary btn-block" ng-disabled="regform.$invalid">Register</button> <div cg-busy="regpromise"></div> <div class="alert" ng-class="{\'alert-success\':message.regSuccess, \'alert-danger\':!message.regSuccess}" ng-show="message.text !== \'\'" style="margin-top: 1em" role="alert">{{message.text}}</div> </form> </div> </div> </div> </div> </div>'),a.put("views/modals/mymodal.html",'<div class="modal-header"> <h3 class="modal-title">Defaulter students</h3> </div> <div class="modal-body"> <table class="table table-bordered"> <tr> <th>Rollno</th> <th>Name</th> <th>Attendance</th> <th>Parents Phone</th> </tr> <tr ng-repeat="(uid, student) in students | orderObjectBy:\'rollno\':false track by uid" ng-if="checkDefaulter(student.percent)"> <td>{{student.rollno}}</td> <td>{{student.name}}</td> <td>{{student.percent}}</td> <td>{{student.pphone}}</td> </tr> </table> </div> <div class="modal-footer"> <button class="btn btn-primary" type="button" ng-click="sendmessage(students)">Send SMS</button> <div cg-busy="{promise: sendsms}"></div> <button class="btn btn-warning" type="button" ng-click="cancel()">Cancel</button> </div>'),a.put("views/takeAttendance.html",'<div class="container"> <style>#over {\r\n      background-image: url("images/android.5754a37f.jpg");\r\n      background-repeat: no-repeat;\r\n      height: 700px;\r\n      width: 408px;\r\n      position: relative;\r\n      left: 50%;\r\n      margin-left: -204px;\r\n    }\r\n    iframe {\r\n      position: relative;\r\n      left: 46px;\r\n      top: 56px;\r\n      height: 560px;\r\n      width: 316px;\r\n    }</style> <div id="over"> <iframe src="web/index.html" frameborder="0"></iframe> </div> </div>')}]);